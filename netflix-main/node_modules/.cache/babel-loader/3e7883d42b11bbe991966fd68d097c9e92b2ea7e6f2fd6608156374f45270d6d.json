{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Escritorio\\\\Netflix-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { AuthProvider, useAuth } from './context/AuthContext';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\n\n// Componente para manejar la navegación entre páginas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuth();\n  const [currentView, setCurrentView] = useState('login');\n\n  // Si el usuario está autenticado, mostrar la página principal\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si no está autenticado, mostrar login o registro según el estado\n  switch (currentView) {\n    case 'register':\n      return /*#__PURE__*/_jsxDEV(RegisterPage, {\n        onSwitchToLogin: () => setCurrentView('login')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this);\n    case 'login':\n    default:\n      return /*#__PURE__*/_jsxDEV(LoginPage, {\n        onSwitchToRegister: () => setCurrentView('register')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n  }\n};\n\n// Componente principal de la aplicación\n_s(AppRouter, \"Achyzw5oQfOE7VwbevcWAhcE0Q4=\", false, function () {\n  return [useAuth];\n});\n_c = AppRouter;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-black\",\n      children: /*#__PURE__*/_jsxDEV(AppRouter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppRouter\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","AuthProvider","useAuth","HomePage","LoginPage","RegisterPage","jsxDEV","_jsxDEV","AppRouter","_s","isAuthenticated","currentView","setCurrentView","fileName","_jsxFileName","lineNumber","columnNumber","onSwitchToLogin","onSwitchToRegister","_c","App","children","className","_c2","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Escritorio/Netflix-main/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { AuthProvider, useAuth } from './context/AuthContext';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\n\n// Componente para manejar la navegación entre páginas\nconst AppRouter = () => {\n  const { isAuthenticated } = useAuth();\n  const [currentView, setCurrentView] = useState('login');\n\n  // Si el usuario está autenticado, mostrar la página principal\n  if (isAuthenticated) {\n    return <HomePage />;\n  }\n\n  // Si no está autenticado, mostrar login o registro según el estado\n  switch (currentView) {\n    case 'register':\n      return (\n        <RegisterPage \n          onSwitchToLogin={() => setCurrentView('login')} \n        />\n      );\n    case 'login':\n    default:\n      return (\n        <LoginPage \n          onSwitchToRegister={() => setCurrentView('register')} \n        />\n      );\n  }\n};\n\n// Componente principal de la aplicación\nconst App = () => {\n  return (\n    <AuthProvider>\n      <div className=\"min-h-screen bg-black\">\n        <AppRouter />\n      </div>\n    </AuthProvider>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,EAAEC,OAAO,QAAQ,uBAAuB;AAC7D,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,YAAY,MAAM,sBAAsB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAgB,CAAC,GAAGR,OAAO,CAAC,CAAC;EACrC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,OAAO,CAAC;;EAEvD;EACA,IAAIU,eAAe,EAAE;IACnB,oBAAOH,OAAA,CAACJ,QAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrB;;EAEA;EACA,QAAQL,WAAW;IACjB,KAAK,UAAU;MACb,oBACEJ,OAAA,CAACF,YAAY;QACXY,eAAe,EAAEA,CAAA,KAAML,cAAc,CAAC,OAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAEN,KAAK,OAAO;IACZ;MACE,oBACET,OAAA,CAACH,SAAS;QACRc,kBAAkB,EAAEA,CAAA,KAAMN,cAAc,CAAC,UAAU;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC;EAER;AACF,CAAC;;AAED;AAAAP,EAAA,CA3BMD,SAAS;EAAA,QACeN,OAAO;AAAA;AAAAiB,EAAA,GAD/BX,SAAS;AA4Bf,MAAMY,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACEb,OAAA,CAACN,YAAY;IAAAoB,QAAA,eACXd,OAAA;MAAKe,SAAS,EAAC,uBAAuB;MAAAD,QAAA,eACpCd,OAAA,CAACC,SAAS;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEnB,CAAC;AAACO,GAAA,GARIH,GAAG;AAUT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}